@using TaskTracker.Models
@model IEnumerable<TaskTracker.Models.Task>

@{
    ViewBag.Title = "Список задач";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@if (Model.Any())
{
    <table class="bordered hoverable">
        <thead>
            <tr>
                <th class="min-width">ID/th>
                <th style="width: 60%">Задача</th>
                <th style="width: 20%">Категория</th>
                <th style="width: 20%">Специалист</th>
            </tr>
        </thead>
        @{ int i = 0; }
        <tbody>
            @foreach (Task task in Model)
            {
                i++;
                <tr>
                    <th>@task.TaskId</th>
                    <td>
                        @*<span class="tooltipped" data-position="bottom" data-delay="50" data-tooltip="@task.Descr">@task.Name</span>*@

                        @*<ul class="collapsible">
                            <li>
                                <div class="collapsible-header">@task.Name</div>
                                <div class="collapsible-body"><p>@task.Descr</p></div>
                            </li>
                        </ul>*@
                        <h5><a href="@Url.Action("Card", "Task", new {id=task.TaskId})">@task.Name</a></h5>
                            <small>
                                @if (@task.Descr.Length > 350)
                                {

                                    @task.Descr.Remove(350)

                                    <br />
                                    <span class="red-text">текст скрытб чтобы увидеть полностью перейдите в катрочку задачи</span>
                                }
                                else
                                {

                                    @task.Descr

                                }
                            </small>

                    </td>
                    <td>
                        @if (@task.TaskCategory.Name.Equals("Bug"))
                        {
                            <i class="mdi-action-bug-report red-text small"></i>
                        }
                        @if (@task.TaskCategory.Name.Equals("Feature"))
                        {
                            <i class="material-icons green-text small">star_rate</i>
                        }
                        <br/>
                        @task.TaskCategory.Name
                    </td>
                    <td>
                        @if (String.IsNullOrEmpty(task.SpecialistSid))
                    {
                            @*<div class="row">
                                <div class="col s9">*@
                                    <a class='dropdown-button btn' href='#' data-activates='specialist@{ @task.TaskId }'>Назначить</a>
                        <ul id='specialist@{ @task.TaskId }' class='dropdown-content'>
                            @foreach (var spec in Specialist.GetProgrammers())
                            {
                                <li><a href="#!" value="@spec.Key">@spec.Value</a></li>
                                <li class="divider"></li>
                            }
                        </ul>
                                    @*<div class="input-field"><select class="browser-default">
        <option value="null">--выберите специалиста--</option>
        @foreach (var s in Specialist.GetProgrammers())
        {
            <option value="@s.Key">@s.Value</option>
        }
    </select></div>*@
                                @*</div>
        <div class="col s3">
            <a href="function:void()" class="btn waves-effect waves-orange"></a>
        </div>
    </div>*@
                        }
                        else
                        {
                            @task.Specialist.DisplayName
                        }

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
