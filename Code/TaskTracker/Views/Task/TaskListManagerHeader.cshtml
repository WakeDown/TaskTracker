@using TaskTracker.Models
@using TaskTracker.Objects
@model IEnumerable<TaskTracker.Models.TaskClaim>

@{
    var selSpec = AdHelper.GetUserBySid(Request.QueryString["spec"]);
    var selAuthor = AdHelper.GetUserBySid(Request.QueryString["author"]);
}

<tr class="indigo lighten-2 white-text">
    <th></th>
    <th class="min-width center">ID</th>
    <th>Задача</th>
    <th>Приоритет</th>
    <th>
        @*<a class='dropdown-button btn' href='#' data-activates='specFilter'>
            @if (!String.IsNullOrEmpty(Request.QueryString["spec"]))
            {
                <span id="selectedSpec" sid="@selSpec.SpecialistSid">
                    @selSpec.DisplayName
                </span>
            }
            else
            {
                <span id="selectedSpec" sid="">Специалист</span>
            }
        </a>*@
        <select id='specFilter' class='form-control input-xs'>
            <option name="spec" sid="" fio="Специалист">Специалист</option>
            @*href="@Url.Action("List", new { spec = "", author = Request.QueryString["author"] })"*@
            @foreach (var spec in Specialist.GetProgrammers())
            {
                <option sid="@spec.Key" fio="@spec.Value" name="spec" @(selSpec.SpecialistSid == spec.Key ? "selected" : String.Empty)>@spec.Value</option>
                //href = "@Url.Action("List", new {spec = spec.Key, author = Request.QueryString["author"]})"
            }
        </select>
    </th>
    <th style="min-width: 200px">
        @*<a class='dropdown-button btn' href='#' data-activates='authorFilter'>
            @if (!String.IsNullOrEmpty(Request.QueryString["author"]))
            {
                <span id="selectedAuthor" sid="@selAuthor.SpecialistSid">
                    @selAuthor.DisplayName
                </span>
            }
            else
            {
                <span id="selectedAuthor" sid="">Автор</span>
            }
        </a>*@
        <select id='authorFilter'  class='form-control input-xs'>
            <option name="author" sid="" fio="Автор">Автор</option>
            @*href="@Url.Action("List", new { auth = "", spec = Request.QueryString["spec"] })"*@
            @foreach (var auth in Model.GroupBy(x => x.CreatorSid).Select(x => new {Sid = x.Key, Name = AdHelper.GetUserBySid(x.Key).DisplayName}).OrderBy(x => x.Name))
            {
                <option sid="@auth.Sid" fio="@auth.Name" name="author" @(selAuthor.SpecialistSid == auth.Sid ? "selected" : String.Empty)>@auth.Name</option>
                //href = "@Url.Action("List", new {author = auth.Sid, spec = Request.QueryString["spec"]})"
            }
        </select>

    </th>
    <th class="min-width"></th>
</tr>