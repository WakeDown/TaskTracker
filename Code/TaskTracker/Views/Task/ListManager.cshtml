@using TaskTracker.Models
@using TaskTracker.Objects
@model IEnumerable<TaskTracker.Models.TaskClaim>

@{
    ViewBag.Title = "Список задач";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string[] selStatesStr = String.IsNullOrEmpty(Request.QueryString["tsts"]) ? new string[0] : Request.QueryString["tsts"].Split(',');
    var sts = TaskState.GetList();
    int[] selStates = !selStatesStr.Any() ? TaskState.GetManagerDefaultList().Select(x=>x.TaskStateId).ToArray() : Array.ConvertAll<string, int>(selStatesStr, int.Parse);
}

<table class="bordered hoverable">
    <thead>
        <tr>
            <td colspan="6">
                <div class="left" id="stateFilterContainer">
                    <div class="left marg-r-md">
                        <input type="checkbox" value="" id="chk-ts-all" @(sts.Count()== selStates.Count()?"checked='checked'":"") /><label for="chk-ts-all">все</label>
                    </div>
                    @foreach (var ts in TaskState.GetList())
                    {
                        <div class="left marg-r-md">
                            <input type="checkbox" value="@ts.TaskStateId" name="chk-ts" id="chk-ts-@ts.TaskStateId" @(selStates.Contains(ts.TaskStateId) ? "checked='checked'" : "")/><label for="chk-ts-@ts.TaskStateId">@ts.Name</label>
                        </div>
                    }
                </div>
                <div class="left">
                    <a class="btn-floating btn-large waves-effect waves-light blue" id="search"><i class="material-icons">search</i></a>
                </div>
            </td>
        </tr>
        @Html.Partial("TaskListManagerHeader", Model)
    </thead>
    @if (Model.Any())
    {
        <tbody>
            @foreach (TaskClaim task in Model)
            {
                @Html.Partial("TaskListManagerItem", task)
            }
        </tbody>
    }
    else
    {
        <tbody>
            <tr>
                <td colspan="6">пусто</td>
            </tr>
        </tbody>
    }
</table>

<div id="modalPause" class="modal">
    <div class="modal-content">
        <h4>Укажите причину приостановки</h4>
        <div class="input-field col s12">
            <input type="text" id="pauseDescr" class="validate" required="required"/>
            <label for="pauseDescr">Причина</label>
        </div>
    </div>
    <div class="modal-footer">
        <a id="pause" href="#!" class="modal-action modal-close waves-effect waves-green btn green"><i class="material-icons">done</i></a>
        <a href="#!" class="modal-action modal-close waves-effect waves-red btn red "><i class="material-icons">close</i></a>
    </div>
</div>
<div id="modalRework" class="modal">
    <div class="modal-content">
        <h4>Укажите причину возврата в работу</h4>
        <div class="input-field col s12">
            <input type="text" id="reworkDescr" class="validate" required="required" />
            <label for="reworkDescr">Причина</label>
        </div>
    </div>
    <div class="modal-footer">
        <a id="rework" href="#!" class="modal-action modal-close waves-effect waves-green btn green"><i class="material-icons">done</i></a>
        <a href="#!" class="modal-action modal-close waves-effect waves-red btn red "><i class="material-icons">close</i></a>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">

        $(function () {
            $('#modalPauseModal.modal-trigger').click(function () {
                $('#pause').attr('tid', $(this).attr('tid'));
                $('#modalPause').openModal();
            });
            $('#modalReworkModal.modal-trigger').click(function () {
                $('#rework').attr('tid', $(this).attr('tid'));
                $('#modalRework').openModal();
            });
            $('#chk-ts-all').click(function () {
                $('#stateFilterContainer [name="chk-ts"]').prop('checked', $(this).is(':checked'));
            });
            $('#stateFilterContainer [name="chk-ts"]').click(function () {
                $('#chk-ts-all').prop('checked', ($('#stateFilterContainer [name="chk-ts"]').length === $('#stateFilterContainer [name="chk-ts"]:checked').length));
            });
            $('#search').click(function () {
                var selStates = $('#stateFilterContainer [name="chk-ts"]:checked');
                var stArr = [];
                for (var i = 0; i < selStates.length; i++) {
                    var val = $(selStates[i]).attr('value');
                    if (val !== '') stArr.push(val);
                }
                var tsts = stArr.join(',');
                var author = $('#selectedAuthor').attr('sid') !== undefined ? $('#selectedAuthor').attr('sid') : '';
                var spec = $('#selectedSpec').attr('sid') !== undefined ? $('#selectedSpec').attr('sid') : '';
                var url = '@Url.Action("List")?tsts=' + tsts + '&author=' + author + '&spec=' + spec;
                window.location = url;
            });
            $('#specFilter [name="spec"]').click(function () {
                var el = $(this);
                var $sel = $('#selectedSpec');
                $sel.attr('sid', el.attr('sid'));
                $sel.text(el.attr('fio'));
            });
            $('#authorFilter [name="author"]').click(function () {
                var el = $(this);
                var $sel = $('#selectedAuthor');
                $sel.attr('sid', el.attr('sid'));
                $sel.text(el.attr('fio'));
            });
            initTaskList();
        });
        function initTaskList($container) {
            if ($container == null) $container = $('body');

            @*$('[type="test"]', $container).click(function () {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetTestState")',
                    method: 'POST',
                    data: { id: tid },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });*@
            $('[type="done"]', $container).click(function () {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetDoneState")',
                    method: 'POST',
                    data: { id: tid },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });
            $('[type="work"]', $container).click(function () {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetWorkState")',
                    method: 'POST',
                    data: { id: tid },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });
            $('#pause', $container).click(function () {
                var tid = $(this).attr('tid');
                var descr = $('#pauseDescr').val();
                $(this).attr('tid','');
                $.ajax(
                {
                    url: '@Url.Action("SetPauseState")',
                    method: 'POST',
                    data: { id: tid, descr: descr },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });
            $('#rework', $container).click(function () {
                var tid = $(this).attr('tid');
                var descr = $('#reworkDescr').val();
                $(this).attr('tid', '');
                $.ajax(
                {
                    url: '@Url.Action("SetReworkState")',
                    method: 'POST',
                    data: { id: tid, descr: descr },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });
            $('[type="set-category"]', $container).click(function (e) {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetTaskCategory")',
                    method: 'POST',
                    data: { id: tid, cid: $(this).attr('cid') },
                    success: function (e) {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });

            });
            $('[type="set-specialist"]', $container).click(function () {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetTaskSpecialist")',
                    method: 'POST',
                    data: { id: tid, sid: $(this).attr('sid') },
                    success: function (data) {
                        if (data.error == null) {
                            updateTaskItem(tid);
                        } else {
                            alert(data.error);
                        }
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });
            $('[type="set-important"]', $container).click(function () {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetTaskImportant")',
                    method: 'POST',
                    data: { id: tid, iid: $(this).attr('iid') },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });
            $('[type="set-quickly"]', $container).click(function () {
                var tid = $(this).attr('tid');
                $.ajax(
                {
                    url: '@Url.Action("SetTaskQuickly")',
                    method: 'POST',
                    data: { id: tid, qid: $(this).attr('qid') },
                    success: function () {
                        updateTaskItem(tid);
                    },
                    error: function (data) {
                        alert(data.error);
                    }
                });
            });

            $('.dropdown-button', $container).dropdown({
                inDuration: 300,
                outDuration: 225,
                constrain_width: false, // Does not change width of dropdown to that of the activator
                gutter: 0, // Spacing from edge
                belowOrigin: false // Displays dropdown below the button
            });
        }
        function updateTaskItem(id) {
            $.ajax({
                url: '@Url.Action("GetTaskListManagerItem", "Task")?id=' + id,
                method: 'GET',
                success: function (html) {
                    $("tr#taskClaim-" + id).replaceWith(html);
                    var $tr = $("tr#taskClaim-" + id);
                    $tr.addClass('updated-task-claim');
                    initTaskList($tr);
                },
                error: function (data) {
                    alert(data.error);
                }
            });
        }
    </script>
}